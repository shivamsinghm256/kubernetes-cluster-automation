---
- name: Disable swap
  command: swapoff -a

- name: Remove swap from fstab
  replace:
    path: /etc/fstab
    regexp: '^\s*([^#\s]+\s+){2}swap\s'
    replace: '# \1swap '

- name: Enable br_netfilter module
  modprobe:
    name: br_netfilter
    state: present

- name: Set sysctl params for Kubernetes
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

- name: Apply sysctl settings
  command: sysctl --system

- name: Install required packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Add containerd GPG key
  shell: |
    mkdir -p /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Add containerd repo
  copy:
    dest: /etc/apt/sources.list.d/docker.list
    content: |
      deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable

- name: Install containerd
  apt:
    name: containerd.io
    state: present
    update_cache: yes

- name: Configure containerd with Kubernetes CRI support
  copy:
    dest: /etc/containerd/config.toml
    content: |
      [plugins."io.containerd.grpc.v1.cri"]
        sandbox_image = "registry.k8s.io/pause:3.9"
        [plugins."io.containerd.grpc.v1.cri".containerd]
          snapshotter = "overlayfs"
          default_runtime_name = "runc"
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
            runtime_type = "io.containerd.runc.v2"
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
              SystemdCgroup = true

- name: Restart containerd
  systemd:
    name: containerd
    state: restarted
    enabled: yes

- name: Remove legacy Kubernetes sources if present
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/apt/sources.list.d/kubernetes.list
    - /etc/apt/sources.list.d/google-cloud.list
    - /etc/apt/keyrings/kubernetes-archive-keyring.gpg
    - /etc/apt/keyrings/kubernetes-apt-keyring.asc
  ignore_errors: true

- name: Create keyrings directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Kubernetes APT key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
    dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
    mode: '0644'

- name: Add Kubernetes APT repository
  copy:
    dest: /etc/apt/sources.list.d/kubernetes.list
    content: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /'

- name: Update APT cache
  apt:
    update_cache: yes

- name: Install kubelet, kubeadm, kubectl
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: Hold Kubernetes packages at installed version
  shell: /usr/bin/apt-mark hold kubelet kubeadm kubectl